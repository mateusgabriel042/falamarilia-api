{"code":"!function(e){var r={};function t(o){if(r[o])return r[o].exports;var n=r[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,t),n.l=!0,n.exports}t.m=e,t.c=r,t.d=function(e,r,o){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:o})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&\"object\"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:e}),2&r&&\"string\"!=typeof e)for(var n in e)t.d(o,n,function(r){return e[r]}.bind(null,n));return o},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,\"a\",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p=\"\",t(t.s=0)}([function(e,r,t){\"use strict\";let o;t.r(r);var n=o={apiKey:null,options:{},init(e,r={}){this.apiKey=e,this.options=r},get isInit(){return!!this.apiKey},async from(...e){if(!o.isInit)throw{code:o.Errors.NOT_INITIATED,message:\"Geocoder isn't initialized. Call Geocoder.init function (only once), passing it your app's api key as parameter.\"};let r;if(isNaN(e[0])||isNaN(e[1])?e[0]instanceof Array?r={latlng:`${e[0][0]},${e[0][1]}`}:e[0]instanceof Object?r={latlng:`${e[0].lat||e[0].latitude},${e[0].lng||e[0].longitude}`}:\"string\"==typeof e[0]&&(r={address:e[0]}):r={latlng:`${e[0]},${e[1]}`},!r)throw{code:o.Errors.INVALID_PARAMETERS,message:\"Invalid parameters : \\n\"+JSON.stringify(e,null,2)};r={key:this.apiKey,...this.options,...r};const t=`https://maps.google.com/maps/api/geocode/json?${n=r,Object.keys(n).filter(e=>!!n[e]).map(e=>e+\"=\"+encodeURIComponent(n[e])).join(\"&\")}`;var n;let i,s;try{i=await fetch(t)}catch(e){throw{code:o.Errors.FETCHING,message:\"Error while fetching. Check your network.\",origin:e}}try{s=await i.json()}catch(e){throw{code:o.Errors.PARSING,message:\"Error while parsing response's body into JSON. The response is in the error's 'origin' field. Try to parse it yourself.\",origin:i}}if(\"OK\"!==s.status)throw{code:o.Errors.SERVER,message:\"Error from the server while geocoding. The received datas are in the error's 'origin' field. Check it for more informations.\",origin:s};return s},Errors:{NOT_INITIATED:0,INVALID_PARAMETERS:1,FETCHING:2,PARSING:3,SERVER:4}};console.log(n)}]);","extractedComments":[]}